@page "/users/Munkalapok"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject NotificationService NotificationService
@inject SzakDolgozat.SQL.Interfaces.ITitkar_Munkalapok_View Titkar_Munkalapok_View_Service
@using SzakDolgozat.SQL.Models
@using SzakDolgozat.SQL.Enum


<h3>Munkalapok</h3>

<!-- Hozzáadás gomb a weboldal tetején -->
<RadzenButton class="my-3" Icon="add_circle" Text="Hozzáadás" Click="@OnAddClick" />
<br />
<RadzenButton class="my-3" Icon="assignment" Text="Vissza" Click="@(() => OnNavigateTo($"/users?bejelentkezettfelhasznaloNev={Uri.EscapeDataString(bejelentkezettfelhasznaloNev)}&bejelentkezettRoleID={bejelentkezettRoleID}"))" />
<br />
<RadzenButton class="my-3" Icon="clear" Text="Szűrők törlése" ButtonStyle="ButtonStyle.Danger" Click="@OnClearFiltersClick" />
@if (filteredMunkalapok == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H2" class="rz-my-6">Munkalapok</RadzenText>
    <RadzenDataGrid @ref="grid" Data="@filteredMunkalapok" FilterMode="FilterMode.Simple" AllowFiltering="true" AllowPaging="true" AllowSorting="true" ColumnWidth="200px">
        <Columns>
            <!-- Nyomtatás gomb -->
            <RadzenDataGridColumn Title="Nyomtatás" Sortable="false">
                <Template Context="data">
                   
                   
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="SzereloNev" Title="Szerelő Neve" FilterValue="@selectedSzereloNev">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedSzereloNev" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="TulajNev" Title="Tulajdonos Neve" FilterValue="@selectedTulajNev">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedTulajNev" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="Telefonszam" Title="Telefonszám" FilterValue="@selectedTelefonszam">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedTelefonszam" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="Email" Title="Email" FilterValue="@selectedEmail">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedEmail" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="Statusz" Title="Státusz" FilterValue="@selectedStatusz">
                <FilterTemplate>
                    <RadzenDropDown Data="@statuszOptions" @bind-Value="@selectedStatusz" Style="width:100%;" /><!--Itt valami gondok vannak ha Tvaluet irok be-->
                </FilterTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="AlvazSzam" Title="Alvázszám" FilterValue="@selectedAlvazSzam">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedAlvazSzam" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="Rendszam" Title="Rendszám" FilterValue="@selectedRendszam">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedRendszam" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="Marka" Title="Márka" FilterValue="@selectedMarka">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedMarka" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="MunkaKezdete" Title="Munka Kezdete" FormatString="{0:d}" FilterValue="@selectedMunkaKezdete">
                <FilterTemplate>
                    <RadzenDatePicker @bind-Value="@selectedMunkaKezdete" Style="width:100%;" AllowClear="true" />
                </FilterTemplate>
            </RadzenDataGridColumn>

            <!-- MunkaIdo, amely int típusú -->
            <RadzenDataGridColumn Property="MunkaIdo" Title="Munkaidő (óra)" FilterValue="@selectedMunkaIdo">
                <FilterTemplate>
                    <RadzenNumeric @bind-Value="@selectedMunkaIdo" ShowUpDown="false" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="Keltezes" Title="Keltezés" FormatString="{0:d}" FilterValue="@selectedKeltezes">
                <FilterTemplate>
                    <RadzenDatePicker @bind-Value="@selectedKeltezes" Style="width:100%;" AllowClear="true" />
                </FilterTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="Osszkoltseg" Title="Összköltség">
                <FilterTemplate>

                </FilterTemplate>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

@code {
    RadzenDataGrid<Titkar_Munkalapok_View> grid;
    private List<Titkar_Munkalapok_View> munkalapok;
    private List<Titkar_Munkalapok_View> filteredMunkalapok;
    private List<StatuszEnum> statuszOptions = new();

    public static string bejelentkezettfelhasznaloNev;
    public static Guid bejelentkezettRoleID;
    // Szűrő változók
    private string selectedSzereloNev;
    private string selectedTulajNev;
    private string selectedTelefonszam;
    private string selectedEmail;
    private StatuszEnum? selectedStatusz;
    private string selectedAlvazSzam;
    private string selectedRendszam;
    private string selectedMarka;
    private DateTime? selectedMunkaKezdete;
    private int? selectedMunkaIdo;  
    private DateTime? selectedKeltezes;
    private long selectedOsszkoltseg;
    protected override async Task OnInitializedAsync()
    {
        statuszOptions = Enum.GetValues(typeof(StatuszEnum)).Cast<StatuszEnum>().ToList();
        var uri = new Uri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);

        bejelentkezettfelhasznaloNev = query["bejelentkezettfelhasznaloNev"];
        Guid.TryParse(query["bejelentkezettRoleID"], out bejelentkezettRoleID);

        // Adatok lekérése
        munkalapok = await Titkar_Munkalapok_View_Service.GetTitkar_Munkalapok_Viewok();
        filteredMunkalapok = munkalapok
        .Where(u => u.TitkarNev == bejelentkezettfelhasznaloNev)  // Itt történik a szűrés
        .ToList();
        //await grid.Reload();
    }


    void OnPrintClick(Titkar_Munkalapok_View data)
    {
        // Itt implementálhatod a nyomtatás logikáját, pl. egy PDF generálása vagy oldal nyomtatása
        Console.WriteLine($"Nyomtatás: {data.Rendszam}");
    }
    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }

    async void OnErrorClick()
    {
        ShowNotification(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Hiba",
                Detail = "Addig a Nyomtatás Gomb nem működik amíg a Szerelő nem nyílvánítja a Szerelés Státuszát NyomtatásraVár-nak",
                Duration = 5000,

            });
        return;
    }

    void OnAddClick()
    {
        // A hozzáadás gomb kattintása után végrehajtandó művelet
        // Itt például egy modális ablakot nyithatsz meg, vagy új oldalt jeleníthetsz meg
        Navigation.NavigateTo($"/users/Munkalapok/Hozzaad?bejelentkezettfelhasznaloNev={Uri.EscapeDataString(bejelentkezettfelhasznaloNev)}&bejelentkezettRoleID={bejelentkezettRoleID}");
    }
    public void OnNavigateTo(string page)
    {
        Navigation.NavigateTo(page);
    }
    async Task OnClearFiltersClick()
    {
        selectedSzereloNev = null;
        selectedTulajNev = null;
        selectedTelefonszam = null;
        selectedEmail = null;
        selectedStatusz = null;
        selectedAlvazSzam = null;
        selectedRendszam = null;
        selectedMarka = null;
        selectedMunkaKezdete = null;
        selectedMunkaIdo = null;
        selectedKeltezes = null;


        // Adatok újra lekérése
        munkalapok = await Titkar_Munkalapok_View_Service.GetTitkar_Munkalapok_Viewok();
        filteredMunkalapok = munkalapok
        .Where(u => u.TitkarNev == bejelentkezettfelhasznaloNev)  // Itt történik a szűrés
        .ToList();
        await grid.Reload();
    }
}