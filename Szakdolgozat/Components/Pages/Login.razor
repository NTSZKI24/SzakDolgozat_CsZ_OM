@page "/Bejelentkezes"
<RadzenTheme Theme="material" />
<PageTitle>Bejelentkezés</PageTitle>
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject NotificationService NotificationService
@inject SzakDolgozat.SQL.Interfaces.IFelhasznalo Felhasznalo_Service
@using SzakDolgozat.SQL.Models


<div class="container">
    <div class="row">
        <div class="col-4"></div>
        <div class="col-4 col-lg-4 col-sm-12">
            <h1 style="color:black">Bejelentkezés</h1>
            <RadzenCard class="rz-my-12 rz-mx-auto" Style="max-width: 400px;">

                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Felhasználónév</RadzenText>
                <RadzenTextBox Style="width: 100%" aria-label="Felhasználónév" @bind-Value="bejelentkezettfelhasznalo" />

                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Jelszó</RadzenText>
                <RadzenTextBox Style="width: 100%" aria-label="Jelszó" @bind-Value="jelszo" Type="Radzen.TextBoxType.Password" />

                <RadzenButton ButtonType="ButtonType.Submit" Icon="login" Text="Bejelentkezés" Click="OnLogin" Style="margin-top:10px; width:100%;" />

            </RadzenCard>
        </div>
    </div>
</div>

<CascadingValue Value="bejelentkezettfelhasznalo">
</CascadingValue>

<CascadingValue Value="bejelentkezettRoleID">
</CascadingValue>

@code {
    public static string bejelentkezettfelhasznalo;
    public static string jelszo;
    public static Guid bejelentkezettRoleID;
    //private static readonly Guid ADMIN_ROLE_GUID = ; // Itt cseréld le az admin role ID-t
    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }

    private async Task OnLogin()
    {
        var felhasznalo = (await Felhasznalo_Service.GetFelhasznalok())
            .FirstOrDefault(f => f.Felhasznalonev == bejelentkezettfelhasznalo && f.Jelszo == jelszo);
        if (bejelentkezettfelhasznalo == null)
        {
            ShowNotification(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Hiba",
                    Detail = "A név megadása kötelező!",
                    Duration = 3000,

                });
            return;
        }
        else if(jelszo == null)
        {
            ShowNotification(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Hiba",
                    Detail = "A Jelszó megadása kötelező!",
                    Duration = 3000,

                });
            return;
        }else if(felhasznalo == null)
        {
            ShowNotification(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Hiba",
                    Detail = "Hibás jelszó vagy felhasználónév",
                    Duration = 3000,

                });
        }
        else
        {
            bejelentkezettfelhasznalo = felhasznalo.Felhasznalonev;
            bejelentkezettRoleID = felhasznalo.RoleID;
            if (bejelentkezettRoleID == Guid.Parse("9df11d9d-c1bf-40a1-9599-e2333e630583"))
            {
                Navigation.NavigateTo("/admin");
            }
            else
            {
                Navigation.NavigateTo("/users");
            }
        }
        
    }
}