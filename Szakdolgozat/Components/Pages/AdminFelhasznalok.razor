<h3>AdminFelhasznalok</h3>
@page "/admin/felhasznalok"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject SzakDolgozat.SQL.Interfaces.IAdmin_felhasznalok_View Admin_felhasznalok_View_Service
@using SzakDolgozat.SQL.Models
@using SzakDolgozat.SQL.Enum

<h3>Munkalapok</h3>

<!-- Hozzáadás gomb a weboldal tetején -->
<RadzenButton class="my-3" Icon="add_circle" Text="Hozzáadás" Click="@OnAddClick" />
<br />
<RadzenButton class="my-3" Icon="add_circle" Text="Vissza" Click="@OnBackClick" />
<br />
<RadzenButton class="my-3" Icon="clear" Text="Szűrők törlése" ButtonStyle="ButtonStyle.Danger" Click="@OnClearFiltersClick" />

@if (felhasznaloklistaja == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H2" class="rz-my-6">Munkalapok</RadzenText>
    <RadzenDataGrid @ref="grid" Data="@felhasznaloklistaja" FilterMode="FilterMode.Simple" AllowFiltering="true" AllowPaging="true" AllowSorting="true" ColumnWidth="200px">
        <Columns>
             <RadzenDataGridColumn Title="Módositás" Sortable="false">
                <Template Context="data">
                    <RadzenButton Icon="print" Text="Módositás" ButtonStyle="ButtonStyle.Primary" Click="@(() => OnUpdateClick(data.ID))" />
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="Felhasznalonev" Title="Felhasználó Név" FilterValue="@selectedFelhasznalonev">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedFelhasznalonev" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="Nev" Title="Név" FilterValue="@selectedNev">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedNev" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="Email" Title="Email" FilterValue="@selectedEmail">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedEmail" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="Jelszo" Title="Jelszó" FilterValue="@selectedJelszo">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedJelszo" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="RoleNev" Title="Szerepkör" FilterValue="@selectedRoleNev">
                <FilterTemplate>
                    <RadzenTextBox @bind-Value="@selectedRoleNev" Style="width:100%;" />
                </FilterTemplate>
            </RadzenDataGridColumn>

        </Columns>
    </RadzenDataGrid>

}
@code {
    RadzenDataGrid<Admin_felhasznalok_View> grid;
    private List<Admin_felhasznalok_View> felhasznaloklistaja = new();
    // Szűrő változók
    private string selectedFelhasznalonev;
    private string selectedNev;
    private string selectedEmail;
    private string selectedJelszo;
    private string selectedRoleNev;
    
    

    protected override async Task OnInitializedAsync()
    {
        felhasznaloklistaja = await Admin_felhasznalok_View_Service.GetAdmin_felhasznalok_Viewok();

    }

    void OnAddClick()
    {
        // A hozzáadás gomb kattintása után végrehajtandó művelet
        // Itt például egy modális ablakot nyithatsz meg, vagy új oldalt jeleníthetsz meg
        Navigation.NavigateTo("/admin/felhasznalok/hozzaad");
    }
    void OnBackClick()
    {
        // A hozzáadás gomb kattintása után végrehajtandó művelet
        // Itt például egy modális ablakot nyithatsz meg, vagy új oldalt jeleníthetsz meg
        Navigation.NavigateTo("/admin");
    }

    void OnUpdateClick(Guid ID)
    {
        
        Navigation.NavigateTo($"/admin/felhasznalok/{ID}");
    }

    async Task OnClearFiltersClick()
    {
        selectedFelhasznalonev = null;
        selectedNev = null;
        selectedEmail = null;
        selectedJelszo = null;
        selectedRoleNev = null;

        // Adatok újra lekérése
        felhasznaloklistaja = await Admin_felhasznalok_View_Service.GetAdmin_felhasznalok_Viewok();
    }
}